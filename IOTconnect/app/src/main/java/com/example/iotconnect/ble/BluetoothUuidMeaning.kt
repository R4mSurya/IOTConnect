package com.example.iotconnect.ble

data class BluetoothUuidMeaning(val uuid: String, val meaning: String)

object BluetoothUuidLookup {
    private val uuidMeanings = listOf(
        BluetoothUuidMeaning("0000180d-0000-1000-8000-00805f9b34fb", "Heart Rate Service"),
        BluetoothUuidMeaning("0000180a-0000-1000-8000-00805f9b34fb", "Device Information Service"),
        BluetoothUuidMeaning("00001801-0000-1000-8000-00805f9b34fb", "Generic Attribute Profile (GATT) Service"),
        BluetoothUuidMeaning("00002a00-0000-1000-8000-00805f9b34fb", "Device Name Characteristic"),
        BluetoothUuidMeaning("00002a01-0000-1000-8000-00805f9b34fb", "Appearance Characteristic"),
        BluetoothUuidMeaning("00002a04-0000-1000-8000-00805f9b34fb", "Peripheral Preferred Connection Parameters Characteristic"),
        BluetoothUuidMeaning("00002a19-0000-1000-8000-00805f9b34fb", "Battery Level Characteristic"),
        BluetoothUuidMeaning("00002a29-0000-1000-8000-00805f9b34fb", "Manufacturer Name String Characteristic"),
        BluetoothUuidMeaning("00002a37-0000-1000-8000-00805f9b34fb", "Heart Rate Measurement Characteristic"),
        BluetoothUuidMeaning("00001800-0000-1000-8000-00805f9b34fb", "Generic Access Profile (GAP) Service"),
        BluetoothUuidMeaning("00001811-0000-1000-8000-00805f9b34fb", "Alert Notification"),
        BluetoothUuidMeaning("0000180f-0000-1000-8000-00805f9b34fb", "Battery"),
    BluetoothUuidMeaning("00001810-0000-1000-8000-00805f9b34fb", "Blood Pressure"),
    BluetoothUuidMeaning("00001805-0000-1000-8000-00805f9b34fb", "Time"),
    BluetoothUuidMeaning("00001818-0000-1000-8000-00805f9b34fb", "Cycling Power"),
    BluetoothUuidMeaning("00001816-0000-1000-8000-00805f9b34fb", "Cycling Speed and Cadence"),
    BluetoothUuidMeaning("0000180a-0000-1000-8000-00805f9b34fb", "Device Information"),
    BluetoothUuidMeaning("00001800-0000-1000-8000-00805f9b34fb", "Generic Access"),
    BluetoothUuidMeaning("00001801-0000-1000-8000-00805f9b34fb", "Generic Attribute"),
    BluetoothUuidMeaning("00001808-0000-1000-8000-00805f9b34fb", "Glucose"),
    BluetoothUuidMeaning("00001809-0000-1000-8000-00805f9b34fb", "Health Thermometer"),
    BluetoothUuidMeaning("00001812-0000-1000-8000-00805f9b34fb", "Human Interface Device"),
    BluetoothUuidMeaning("00001802-0000-1000-8000-00805f9b34fb", "Find Me"),
    BluetoothUuidMeaning("00001803-0000-1000-8000-00805f9b34fb", "Proximity"),
    BluetoothUuidMeaning("00001819-0000-1000-8000-00805f9b34fb", "Location and Navigation"),
    BluetoothUuidMeaning("00001807-0000-1000-8000-00805f9b34fb", "Next DST Change Service"),
    BluetoothUuidMeaning("0000180e-0000-1000-8000-00805f9b34fb", "Phone Alert Status Service"),
    BluetoothUuidMeaning("00001806-0000-1000-8000-00805f9b34fb", "Reference Time Update Service"),
    BluetoothUuidMeaning("00001814-0000-1000-8000-00805f9b34fb", "Running Speed and Cadence"),
    BluetoothUuidMeaning("00001813-0000-1000-8000-00805f9b34fb", "Scan Parameters"),
    BluetoothUuidMeaning("00001804-0000-1000-8000-00805f9b34fb", "Tx Power"),
    BluetoothUuidMeaning("00002a43-0000-1000-8000-00805f9b34fb", "Alert Category ID"),
    BluetoothUuidMeaning("00002a42-0000-1000-8000-00805f9b34fb", "Alert Category ID Bit Mask"),
    BluetoothUuidMeaning("00002a06-0000-1000-8000-00805f9b34fb", "Alert Level"),
    BluetoothUuidMeaning("00002a44-0000-1000-8000-00805f9b34fb", "Alert Notification Control Point"),
    BluetoothUuidMeaning("00002a3f-0000-1000-8000-00805f9b34fb", "Alert Status"),
    BluetoothUuidMeaning("00002a01-0000-1000-8000-00805f9b34fb", "Appearance"),
    BluetoothUuidMeaning("00002a19-0000-1000-8000-00805f9b34fb", "Battery Level"),
    BluetoothUuidMeaning("00002a49-0000-1000-8000-00805f9b34fb", "Blood Pressure Feature"),
    BluetoothUuidMeaning("00002a35-0000-1000-8000-00805f9b34fb", "Blood Pressure Measurement"),
    BluetoothUuidMeaning("00002a38-0000-1000-8000-00805f9b34fb", "Body Sensor Location"),
    BluetoothUuidMeaning("00002a22-0000-1000-8000-00805f9b34fb", "Boot Keyboard Input Report"),
    BluetoothUuidMeaning("00002a32-0000-1000-8000-00805f9b34fb", "Boot Keyboard Output Report"),
    BluetoothUuidMeaning("00002a33-0000-1000-8000-00805f9b34fb", "Boot Mouse Input Report"),
    BluetoothUuidMeaning("00002a5c-0000-1000-8000-00805f9b34fb", "CSC Feature"),
    BluetoothUuidMeaning("00002a5b-0000-1000-8000-00805f9b34fb", "CSC Measurement"),
    BluetoothUuidMeaning("00002a2b-0000-1000-8000-00805f9b34fb", "Current Time"),
    BluetoothUuidMeaning("00002a66-0000-1000-8000-00805f9b34fb", "Cycling Power Control Point"),
    BluetoothUuidMeaning("00002a65-0000-1000-8000-00805f9b34fb", "Cycling Power Feature"),
    BluetoothUuidMeaning("00002a63-0000-1000-8000-00805f9b34fb", "Cycling Power Measurement"),
    BluetoothUuidMeaning("00002a64-0000-1000-8000-00805f9b34fb", "Cycling Power Vector"),
    BluetoothUuidMeaning("00002a08-0000-1000-8000-00805f9b34fb", "Date Time"),
    BluetoothUuidMeaning("00002a0a-0000-1000-8000-00805f9b34fb", "Day Date Time"),
    BluetoothUuidMeaning("00002a09-0000-1000-8000-00805f9b34fb", "Day of Week"),
    BluetoothUuidMeaning("00002a00-0000-1000-8000-00805f9b34fb", "Device Name"),
    BluetoothUuidMeaning("00002a0d-0000-1000-8000-00805f9b34fb", "DST Offset"),
    BluetoothUuidMeaning("00002a0c-0000-1000-8000-00805f9b34fb", "Exact Time 256"),
    BluetoothUuidMeaning("00002a26-0000-1000-8000-00805f9b34fb", "Firmware Revision String"),
    BluetoothUuidMeaning("00002a51-0000-1000-8000-00805f9b34fb", "Glucose Feature"),
    BluetoothUuidMeaning("00002a18-0000-1000-8000-00805f9b34fb", "Glucose Measurement"),
    BluetoothUuidMeaning("00002a34-0000-1000-8000-00805f9b34fb", "Glucose Measurement Context"),
    BluetoothUuidMeaning("00002a27-0000-1000-8000-00805f9b34fb", "Hardware Revision String"),
    BluetoothUuidMeaning("00002a39-0000-1000-8000-00805f9b34fb", "Heart Rate Control Point"),
    BluetoothUuidMeaning("00002a37-0000-1000-8000-00805f9b34fb", "Heart Rate Measurement"),
    BluetoothUuidMeaning("00002a4c-0000-1000-8000-00805f9b34fb", "HID Control Point"),
    BluetoothUuidMeaning("00002a4a-0000-1000-8000-00805f9b34fb", "HID Information"),
    BluetoothUuidMeaning("00002a2a-0000-1000-8000-00805f9b34fb", "IEEE 11073-20601 Regulatory Certification Data List"),
    BluetoothUuidMeaning("00002a36-0000-1000-8000-00805f9b34fb", "Intermediate Cuff Pressure"),
    BluetoothUuidMeaning("00002a1e-0000-1000-8000-00805f9b34fb", "Intermediate Temperature"),
    BluetoothUuidMeaning("00002a6b-0000-1000-8000-00805f9b34fb", "LN Control Point"),
    BluetoothUuidMeaning("00002a6a-0000-1000-8000-00805f9b34fb", "LN Feature"),
    BluetoothUuidMeaning("00002a0f-0000-1000-8000-00805f9b34fb", "Local Time Information"),
    BluetoothUuidMeaning("00002a67-0000-1000-8000-00805f9b34fb", "Location and Speed"),
    BluetoothUuidMeaning("00002a29-0000-1000-8000-00805f9b34fb", "Manufacturer Name String"),
    BluetoothUuidMeaning("00002a21-0000-1000-8000-00805f9b34fb", "Measurement Interval"),
    BluetoothUuidMeaning("00002a24-0000-1000-8000-00805f9b34fb", "Model Number String"),
    BluetoothUuidMeaning("00002a68-0000-1000-8000-00805f9b34fb", "Navigation"),
    BluetoothUuidMeaning("00002a46-0000-1000-8000-00805f9b34fb", "New Alert"),
    BluetoothUuidMeaning("00002a04-0000-1000-8000-00805f9b34fb", "Peripheral Preferred Connection Parameters"),
    BluetoothUuidMeaning("00002a02-0000-1000-8000-00805f9b34fb", "Peripheral Privacy Flag"),
    BluetoothUuidMeaning("00002a50-0000-1000-8000-00805f9b34fb", "PnP ID"),
    BluetoothUuidMeaning("00002a69-0000-1000-8000-00805f9b34fb", "Position Quality"),
    BluetoothUuidMeaning("00002a4e-0000-1000-8000-00805f9b34fb", "Protocol Mode"),
    BluetoothUuidMeaning("00002a03-0000-1000-8000-00805f9b34fb", "Reconnection Address"),
    BluetoothUuidMeaning("00002a52-0000-1000-8000-00805f9b34fb", "Record Access Control Point"),
    BluetoothUuidMeaning("00002a14-0000-1000-8000-00805f9b34fb", "Reference Time Information"),
    BluetoothUuidMeaning("00002a4d-0000-1000-8000-00805f9b34fb", "Report"),
    BluetoothUuidMeaning("00002a4b-0000-1000-8000-00805f9b34fb", "Report Map"),
    BluetoothUuidMeaning("00002a40-0000-1000-8000-00805f9b34fb", "Ringer Control Point"),
    BluetoothUuidMeaning("00002a41-0000-1000-8000-00805f9b34fb", "Ringer Setting"),
    BluetoothUuidMeaning("00002a54-0000-1000-8000-00805f9b34fb", "RSC Feature"),
    BluetoothUuidMeaning("00002a53-0000-1000-8000-00805f9b34fb", "RSC Measurement"),
    BluetoothUuidMeaning("00002a55-0000-1000-8000-00805f9b34fb", "SC Control Point"),
    BluetoothUuidMeaning("00002a4f-0000-1000-8000-00805f9b34fb", "Scan Interval Window"),
    BluetoothUuidMeaning("00002a31-0000-1000-8000-00805f9b34fb", "Scan Refresh"),
    BluetoothUuidMeaning("00002a5d-0000-1000-8000-00805f9b34fb", "Sensor Location"),
    BluetoothUuidMeaning("00002a25-0000-1000-8000-00805f9b34fb", "Serial Number String"),
    BluetoothUuidMeaning("00002a05-0000-1000-8000-00805f9b34fb", "Service Changed"),
    BluetoothUuidMeaning("00002a28-0000-1000-8000-00805f9b34fb", "Software Revision String"),
    BluetoothUuidMeaning("00002a47-0000-1000-8000-00805f9b34fb", "Supported New Alert Category"),
    BluetoothUuidMeaning("00002a48-0000-1000-8000-00805f9b34fb", "Supported Unread Alert Category"),
    BluetoothUuidMeaning("00002a23-0000-1000-8000-00805f9b34fb", "System ID"),
    BluetoothUuidMeaning("00002a1c-0000-1000-8000-00805f9b34fb", "Temperature Measurement"),
    BluetoothUuidMeaning("00002a1d-0000-1000-8000-00805f9b34fb", "Temperature Type"),
    BluetoothUuidMeaning("00002a12-0000-1000-8000-00805f9b34fb", "Time Accuracy"),
    BluetoothUuidMeaning("00002a13-0000-1000-8000-00805f9b34fb", "Time Source"),
    BluetoothUuidMeaning("00002a16-0000-1000-8000-00805f9b34fb", "Time Update Control Point"),
    BluetoothUuidMeaning("00002a17-0000-1000-8000-00805f9b34fb", "Time Update State"),
    BluetoothUuidMeaning("00002a11-0000-1000-8000-00805f9b34fb", "Time with DST"),
    BluetoothUuidMeaning("00002a0e-0000-1000-8000-00805f9b34fb", "Time Zone"),
    BluetoothUuidMeaning("00002a07-0000-1000-8000-00805f9b34fb", "Tx Power Level"),
    BluetoothUuidMeaning("00002a45-0000-1000-8000-00805f9b34fb", "Unread Alert Status")
        // Add more well-known UUIDs and their meanings here
    )

    fun getMeaning(uuid: String): String? {
        return uuidMeanings.find { it.uuid == uuid }?.meaning
    }
}

